
version: 2
jobs:
  build:
    working_directory: ~/build-on-linux
    parallelism: 2
    shell: /bin/bash --login
    environment:
      COVERALLS_REPO_TOKEN: aSN6kpjINvc8uDM9OxnRW0bPcbBbhFLz5

    # alternatively, we could just use `machine`.
    docker:
      - image: circleci/builder-base:1.1

    # run all of the following steps
    steps:
      - checkout
      - run: mkdir -p ~/build-on-linux/artifacts

      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-

      # install miniconda and all of the package dependencies
      - run:
          name: Install miniconda and dependencies
          command: |
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            chmod +x miniconda.sh
            ./miniconda.sh -b -f
            ~/miniconda3/bin/conda install --file conda_requirements.txt --yes
            ~/miniconda3/bin/pip install nose-cov python-coveralls

      # install factor analyzer
      - run:
          name: Install factor analyzer
          command: ~/miniconda3/bin/pip install -e .

      # cache the current packages
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/miniconda3/pkgs

      # run all of the tests
      - run:
          name: Run tests
          command: ~/miniconda3/bin/nosetests -v tests --with-coverage --cover-package=factor_analyzer --cov-config .coveragerc

      # change to factor analyzer directory and run coveralls
      - run:
          name: Run coveralls
          command: cd ~/build-on-linux/factor_analyzer && ~/miniconda3/bin/coveralls

      # store any remaining artifacts
      - store_artifacts:
          path: ~/build-on-linux/artifacts
